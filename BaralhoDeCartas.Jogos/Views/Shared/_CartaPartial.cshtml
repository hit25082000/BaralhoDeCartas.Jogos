@model BaralhoDeCartas.Models.Interfaces.ICarta

<div class="playing-card flipped">
    <div class="playing-card-inner">
        <div class="playing-card-back">
            <div class="card-pattern"></div>
        </div>
        <div class="playing-card-front @(Model.Naipe == "♥" || Model.Naipe == "♦" ? "card-red" : "card-black")">
            @if (string.IsNullOrEmpty(Model.ImagemUrl))
            {
                <div class="card-content">
                    <div class="card-corner top-left">
                        <span class="card-value">@Model.ValorSimbolico</span>
                        <span class="card-suit">@Model.Naipe</span>
                    </div>
                    <div class="card-center">
                        <span class="card-big-symbol">@Model.Naipe</span>
                    </div>
                    <div class="card-corner bottom-right">
                        <span class="card-value">@Model.ValorSimbolico</span>
                        <span class="card-suit">@Model.Naipe</span>
                    </div>
                </div>
            }
            else
            {
                <img class="card-content card-image" src="@Model.ImagemUrl">
                    
                </img>
            }
        </div>
    </div>
</div>

<style>
    .playing-card {
        width: 120px;
        height: 180px;
        margin: 5px;
        perspective: 1000px;
        display: inline-block;
    }

    .playing-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.6s;
        transform-style: preserve-3d;
    }

    .playing-card.flipped .playing-card-inner {
        transform: rotateY(180deg);
    }

    .playing-card-back, .playing-card-front {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .playing-card-back {
        background: linear-gradient(45deg, #1a237e, #0d47a1);
        z-index: 2;
    }

    .playing-card-front {
        background: white;
        transform: rotateY(180deg);
        z-index: 1;
    }

    .card-content {
        position: relative;
        width: 100%;
        height: 100%;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 10px;
    }

    .card-image {
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
    }

    .card-corner {
        position: absolute;
        display: flex;
        flex-direction: column;
        align-items: center;
        background: rgba(255, 255, 255, 0.9);
        padding: 2px;
        border-radius: 4px;
    }

    .top-left {
        top: 5px;
        left: 5px;
    }

    .bottom-right {
        bottom: 5px;
        right: 5px;
        transform: rotate(180deg);
    }

    .card-value {
        font-size: 1.2rem;
        font-weight: bold;
        line-height: 1;
    }

    .card-suit {
        font-size: 1.2rem;
        line-height: 1;
    }

    .card-big-symbol {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 3rem;
    }

    .card-red {
        color: #dc3545;
    }

    .card-black {
        color: #212529;
    }

    .card-pattern {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: repeating-linear-gradient( 45deg, rgba(255,255,255,0.1) 0px, rgba(255,255,255,0.1) 10px, transparent 10px, transparent 20px );
        background-size: 28px 28px;
        border-radius: 10px;
    }

        .card-pattern::before {
            content: '♠♣♥♦';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 2rem;
            color: rgba(255,255,255,0.2);
        }
</style>